group_by(age) %>%
# summarise tells how many users in each group, n is number of users in each group
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
head(pf.fc_by_age)
ggplot(aes(x=age, y=friend_count_mean), data=pf.fc_by_age) + geom_line()
ggplot(aes(x = age, y = friend_count), data = pf) + xlim(13, 90) +
coord_cartesian(xlim = c(13, 70), ylim = c(0, 1000)) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
# add mean to the plot
geom_line(stat = 'summary', fun.y = mean) +
# add 10% quantile to the plot
geom_line(stat = 'summary', fun.y = quantile,
fun.args = list(probs = .1), linetype = 3, color = 'blue' ) +
# add 50% quantile to the plot
geom_line(stat = 'summary', fun.y = quantile,
fun.args = list(probs = .5), linetype = 3, color = 'blue' ) +
# add 90% quantile to the plot
geom_line(stat = 'summary', fun.y = quantile,
fun.args = list(probs = .9), linetype = 3, color = 'blue' )
?cor.test
cor.test(pf$age, pf$friend_count, method = 'pearson')
with(pf, cor.test(age, friend_count), method = 'pearson')
with(subset(pf, age <= 70), cor.test(age, friend_count, method = 'pearson'))
with(subset(pf, age <= 70), cor.test(age, friend_count, method = 'spearman'))
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) + geom_point()
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) + geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95)) +
geom_smooth(method = 'lm', color = 'red')
cor.test(pf$www_likes_received, pf$likes_received, method = 'pearson')
# install.packages('alr3')
library(alr3)
data("Mitchell")
?Mitchell
ggplot(aes(x = Temp, y = Month), data = Mitchell) + geom_point()
cor.test(Mitchell$Month, Mitchell$Temp, method = 'pearson')
ggplot(aes(x = Month, y = Temp), data = Mitchell) + geom_point() +
scale_x_discrete(breaks = seq(0, 203, 12))
pf$age_with_months <- with(pf, age + (1 - dob_month / 12))
age_groups <- group_by(pf, age_with_months)
pf.fc_by_age_months <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age_months <- arrange(pf.fc_by_age_months, age_with_months)
head(pf.fc_by_age)
ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line()
p1 <- ggplot(aes(x = age, y = friend_count_mean), data = subset(pf.fc_by_age, age < 71)) +
geom_line() + geom_smooth()
p2 <- ggplot(aes(x = age_with_months, y = friend_count_mean), data = subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line() + geom_smooth()
p3 <- ggplot(aes(x = round(age/5)*5, y = friend_count), data = subset(pf, age < 71)) +
geom_line(stat = 'summary', fun.y = mean)
library(gridExtra)
grid.arrange(p2, p1, p3, ncol = 1)
names(diamonds)
ggplot(aes(x = x, y = price), data = diamonds) + geom_point()
cor.test(diamonds$x, diamonds$price, method = 'pearson')
cor.test(diamonds$y, diamonds$price, method = 'pearson')
cor.test(diamonds$z, diamonds$price, method = 'pearson')
ggplot(aes(x = depth, y = price), data = diamonds) + geom_point()
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(50, 80, 2))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(50, 80, 2))+
xlim(50, 80)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(50, 80, 2))+
xlim(50, 70)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(50, 80, 2))+
xlim(55, 70)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(50, 80, 2))+
xlim(0, quantile(diamonds$depth, 0.95)) +
ylim(0, quantile(diamonds$price, 0.95))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
xlim(0, quantile(diamonds$depth, 0.95)) +
ylim(0, quantile(diamonds$price, 0.95))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
xlim(quantile(diamonds$depth, 0.05), quantile(diamonds$depth, 0.95)) +
ylim(quantile(diamonds$depth, 0.05), quantile(diamonds$price, 0.95))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(quantile(diamonds$depth, 0.05), quantile(diamonds$depth, 0.95), 2))+
xlim(quantile(diamonds$depth, 0.05), quantile(diamonds$depth, 0.95)) +
ylim(quantile(diamonds$depth, 0.05), quantile(diamonds$price, 0.95))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(quantile(diamonds$depth, 0.1), quantile(diamonds$depth, 0.9), 2))+
xlim(quantile(diamonds$depth, 0.1), quantile(diamonds$depth, 0.9)) +
ylim(quantile(diamonds$depth, 0.1), quantile(diamonds$price, 0.9))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(quantile(diamonds$depth, 0.1), quantile(diamonds$depth, 0.9), 2))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(quantile(diamonds$depth, 0.1), quantile(diamonds$depth, 0.9), 2))+
xlim(quantile(diamonds$depth, 0.1), quantile(diamonds$depth, 0.9)) +
ylim(quantile(diamonds$depth, 0.1), quantile(diamonds$price, 0.9))
cor.test(diamonds$depth, diamonds$price, method = 'pearson')
diamonds.volume = diamonds$x * diamonds$y *diamonds$z
names(diamonds)
diamonds
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(quantile(diamonds$depth, 0.1), quantile(diamonds$depth, 0.9), 2))+
xlim(quantile(diamonds$depth, 0.1), quantile(diamonds$depth, 0.9)) +
ylim(quantile(diamonds$price, 0.1), quantile(diamonds$price, 0.9))
ggplot(data = diamonds, aes(x = diamonds.volume, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(quantile(diamonds.volume, 0.1), quantile(diamonds.volume, 0.9), 2))+
xlim(quantile(diamonds.volume, 0.1), quantile(diamonds.volume, 0.9)) +
ylim(quantile(diamonds$price, 0.1), quantile(diamonds$price, 0.9))
ggplot(data = diamonds, aes(x = diamonds.volume, y = price)) +
geom_point() +
scale_x_continuous(breaks = seq(quantile(diamonds.volume, 0.1), quantile(diamonds.volume, 0.9), 2))+
xlim(quantile(diamonds.volume, 0.1), quantile(diamonds.volume, 0.9)) +
ylim(quantile(diamonds$price, 0.1), quantile(diamonds$price, 0.9))
ggplot(data = diamonds, aes(x = diamonds.volume, y = price)) +
geom_point(1/20) +
scale_x_continuous(breaks = seq(quantile(diamonds.volume, 0.1), quantile(diamonds.volume, 0.9), 2))+
xlim(quantile(diamonds.volume, 0.1), quantile(diamonds.volume, 0.9)) +
ylim(quantile(diamonds$price, 0.1), quantile(diamonds$price, 0.9))
ggplot(data = diamonds, aes(x = diamonds.volume, y = price)) +
geom_point(alpha = 1/20) +
scale_x_continuous(breaks = seq(quantile(diamonds.volume, 0.1), quantile(diamonds.volume, 0.9), 2))+
xlim(quantile(diamonds.volume, 0.1), quantile(diamonds.volume, 0.9)) +
ylim(quantile(diamonds$price, 0.1), quantile(diamonds$price, 0.9))
ggplot(data = diamonds, aes(x = diamonds.volume, y = price))
diamonds$volume <- diamonds$x * diamonds$y *diamonds$z
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point(alpha = 1/20) +
scale_x_continuous(breaks = seq(quantile(diamonds.volume, 0.1), quantile(diamonds.volume, 0.9), 2))+
xlim(quantile(diamonds.volume, 0.1), quantile(diamonds.volume, 0.9)) +
ylim(quantile(diamonds$price, 0.1), quantile(diamonds$price, 0.9))
count(diamonds$volume == 0)
)
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point(alpha = 1/20) +
scale_x_continuous(breaks = seq(quantile(diamonds$volume, 0.1), quantile(diamonds$volume, 0.9), 2))+
xlim(quantile(diamonds$volume, 0.1), quantile(diamonds$volume, 0.9)) +
ylim(quantile(diamonds$price, 0.1), quantile(diamonds$price, 0.9))
count(diamonds$volume == 0)
diamonds$volume <- diamonds$x * diamonds$y *diamonds$z
count(diamonds$volume == 0)
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point(alpha = 1/20)
with(subset(diamonds, volume <= 70, volume >= 0), cor.test(volume, price, method = 'pearson'))
with(subset(diamonds, volume <= 70 & volume >= 0), cor.test(volume, price, method = 'pearson'))
with(subset(diamonds, volume <= 800 & volume >= 0), cor.test(volume, price, method = 'pearson'))
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point(alpha = 1/20) +
scale_x_continuous(breaks = seq(quantile(diamonds$volume, 0.1), quantile(diamonds$volume, 0.9), 2))+
xlim(quantile(diamonds$volume, 0.1), quantile(diamonds$volume, 0.9)) +
ylim(quantile(diamonds$price, 0.1), quantile(diamonds$price, 0.9)) +
geom_smooth()
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point(alpha = 1/20) +
scale_x_continuous(breaks = seq(quantile(diamonds$volume, 0.1), quantile(diamonds$volume, 0.9), 2))+
xlim(quantile(diamonds$volume, 0.1), quantile(diamonds$volume, 0.9)) +
ylim(quantile(diamonds$price, 0.1), quantile(diamonds$price, 0.9)) +
geom_smooth(method = 'lm', color = 'red')
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point(alpha = 1/20) +
scale_x_continuous(breaks = seq(quantile(diamonds$volume, 0.1), quantile(diamonds$volume, 0.9), 2))+
xlim(0, 800) +
ylim(quantile(diamonds$price, 0.1), quantile(diamonds$price, 0.9)) +
geom_smooth(method = 'lm', color = 'red')
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
data(diamonds)
diamondsByClarity <- summarise(diamonds,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price)
n = n())
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
data(diamonds)
data(diamonds)
diamondsByClarity <- summarise(diamonds,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price)
n = n())
data(diamonds)
diamondsByClarity <- summarise(diamonds,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price)
n = n())
diamondsByClarity <- summarise(diamonds,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
head(diamondsByClarity)
diamondsByClarity <- diamonds %>%
summarise(diamonds,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
diamondsByClarity <- summarise(diamonds,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
head(diamondsByClarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
diamondsByClarity <- diamonds %>%
summarise(diamonds,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
diamondsByClarity <- summarise(diamonds,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
head(diamondsByClarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
head(diamonds_mp_by_clarity)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n= n())
diamondsByClarity
p1  <- ggplot(diamonds_mp_by_clarity, aes(x = clarity, y = mean_price, fill= clarity)) +
geom_bar(stat = "identity")
p2 <- ggplot(diamonds_mp_by_color, aes(x = color, y = mean_price, fill= color)) +
geom_bar(stat = "identity")
library(gridExtra)
grid.arrange(p1, p2, ncol = 1)
diamonds_by_cut <- group_by(diamonds, cut)
diamonds_mp_by_cut <- summarise(diamonds_by_cut, mean_price = mean(price))
ggplot(diamonds_mp_by_cut, aes(x = cut, y = mean_price, fill= cut)) +
geom_bar(stat = "identity")
install.packages(c("devtools", "Matrix", "multcomp", "openssl", "rmarkdown", "tidyverse"))
getwd()
setwd('/Users/yang/Dropbox/Udacity/DataAnalyst/ExploratoryDataAnalysis/Explore and Summarize Data Project/')
ls
install.packages("knitLatex")
install.packages("knitrBootstrap")
install.packages("knitr")
library(ggplot2)
install.packages("ggplot2")
# Load the Data
Wine <- read.csv('wineQualityWhites.csv')
library(ggplot2)
# Load the Data
Wine <- read.csv('wineQualityWhites.csv')
summary(Wine)
head(Wine)
names(Wine)
names(Wine)
summary(Wine)
ggplot(aes(x = alcohol, y = quality), data = Wine) + geom_point()
ggplot(aes(x = alcohol, y = quality), data = Wine) + geom_line()
names(Wine)
ggplot(aes(x = pH, y = quality), data = Wine) + geom_line()
ggplot(aes(x = X, y = quality), data = Wine) + geom_line()
View(Wine)
View(Wine)
ggplot(aes(x = residual.sugar, y = quality), data = Wine) + geom_line()
ggplot(aes(x = chlorides, y = quality), data = Wine) + geom_line()
str(Wine)
ggplot(aes(x = chlorides), data = Wine) + geom_histogram()
ggplot(aes(x = citric.acid), data = Wine) + geom_histogram()
ggplot(aes(x = density), data = Wine) + geom_histogram()
ggplot(aes(x = sulphates), data = Wine) + geom_histogram()
ggplot(aes(x = fixed.acidity
), data = Wine) + geom_histogram()
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram()
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(binwidth = 30)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(binwidth = 10)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(binwidth = 5)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(binwidth = 1)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram()
(binwidth = 1
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(binwidth = 1)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(binwidth = 1)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(binwidth = .5)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram()
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(bins = 30)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(bins = 50)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(bins = 100)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(bins = 80)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(bins = 70)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(bins = 50)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(binwidth = 0.5)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(binwidth = 0.25)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(binwidth = 0.1)
ggplot(aes(x = fixed.acidity, fill = pH), data = Wine) + geom_histogram(binwidth = 0.1)
library(gridExtra)
library(gridExtra)
library(grid)
install.packages("gridExtra")
library(grid)
library(gridExtra)
ggplot(aes(x = fixed.acidity, fill = pH), data = Wine) + geom_histogram(binwidth = 0.1)
ggplot(aes(x = quality), data = Wine) + geom_histogram()
ggplot(aes(x = quality), data = Wine) + geom_histogram()
```{r echo=FALSE, warning = FALSE, message=FALSE, Univariate_Plots}
```{r echo=FALSE, warning = FALSE, message=FALSE, Quality}
ggplot(aes(x = quality), data = Wine) + geom_histogram()
ggplot(aes(x = quality), data = Wine) + geom_histogram(binwidth = 1)
ggplot(aes(x = quality), data = Wine) + geom_histogram(binwidth = 0.2)
ggplot(aes(x = quality), data = Wine) + geom_histogram(binwidth = 0.5)
ggplot(aes(x = quality), data = Wine) + geom_boxplot(binwidth = 0.5)
ggplot(aes(x = quality), data = Wine) + geom_boxplot()
ggplot(aes(x = quality), data = Wine) + geom_histogram(binwidth = 0.5)
ggplot(aes(x = alcohol), data = Wine) + geom_histogram(binwidth = 0.1)
ggplot(aes(x = alcohol), data = Wine) + geom_histogram(binwidth = 0.1)
ggplot(aes(x = alcohol), data = Wine) + geom_histogram(binwidth = 1)
ggplot(aes(x = alcohol), data = Wine) + geom_histogram(binwidth = .5)
ggplot(aes(x = alcohol), data = Wine) + geom_histogram(binwidth = .25)
```{r echo=FALSE, warning = FALSE, message=FALSE, total.sulfur.dioxide}
ggplot(aes(x = total.sulfur.dioxide), data = Wine) + geom_histogram(binwidth = 0.1)
ggplot(aes(x = total.sulfur.dioxide), data = Wine) + geom_histogram(binwidth = 1)
ggplot(aes(x = total.sulfur.dioxide), data = Wine) + geom_histogram()
ggplot(aes(x = fixed.acidity ), data = Wine) + geom_histogram(binwidth = 0.1)
ggplot(aes(x = fixed.acidity ), data = Wine) + geom_histogram(binwidth = 1)
ggplot(aes(x = fixed.acidity), data = Wine) + geom_histogram(binwidth = .25)
ggplot(aes(x = pH), data = Wine) + geom_histogram()
ggplot(aes(x = pH, y = quality), data = Wine) + geom_histogram()
ggplot(aes(x = pH, y = quality), data = Wine) + geom_hline()
ggplot(aes(x = pH, y = quality), data = Wine) + geom_line()
ggplot(aes(x = pH, y = quality), data = Wine) + geom_point()
ggplot(aes(x = alcohol, y = quality), data = Wine) + geom_point()
ggplot(aes(x = alcohol, y = quality), data = Wine) + geom_line()
qplot(x=x, y=y, data=wine, geom="jitter", alpha=0.01) +
geom_boxplot() +
guides(alpha="none") +
theme_bw()
qplot(x=x, y=y, data=Wine, geom="jitter", alpha=0.01) +
geom_boxplot() +
guides(alpha="none") +
theme_bw()
bi_qplot <- function(x, y, z="jitter") {
if(z=="boxplot") {
qplot(x=x, y=y, data=wine, geom="jitter", alpha=0.01) +
geom_boxplot() +
guides(alpha="none") +
theme_bw()
}
else {
qplot(x=x, y=y, data=wine, geom=z, alpha=0.01) +
guides(alpha="none") +
theme_bw()
}
}
bi_qplot(quality.level, volatile.acidity, "boxplot") +
xlab("Quality level") +
ylab("Volatile acidity (g/dm^3)")
qplot(x=x, y=y, data=Wine, geom="jitter", alpha=0.01) +
geom_boxplot() +
guides(alpha="none") +
theme_bw()
if(z=="boxplot") {
qplot(x=x, y=y, data=Wine, geom="jitter", alpha=0.01) +
geom_boxplot() +
guides(alpha="none") +
theme_bw()
}
else {
bi_qplot <- function(x, y, z="jitter") {
if(z=="boxplot") {
qplot(x=x, y=y, data=Wine, geom="jitter", alpha=0.01) +
geom_boxplot() +
guides(alpha="none") +
theme_bw()
}
else {
qplot(x=x, y=y, data=wine, geom=z, alpha=0.01) +
guides(alpha="none") +
theme_bw()
}
}
bi_qplot(quality.level, volatile.acidity, "boxplot") +
xlab("Quality level") +
ylab("Volatile acidity (g/dm^3)")
ggplot(aes(x = alcohol, y = quality), data = Wine) + geom_point()
ggplot(aes(x = alcohol, y = quality), data = Wine) + geom_histogram()
geom_point
ggplot(aes(x = alcohol, y = quality), data = Wine) + geom_point()
ggplot(aes(x = pH), data = Wine) + geom_histogram()
meltData <- melt(wine[2:13])
# Load the Data
wine <- read.csv('wineQualityWhites.csv')
names(wine)
str(wine)
summary(wine)
meltData <- melt(wine[2:13])
ggplot(meltData, aes(factor(variable), value))+
geom_boxplot() + facet_wrap(~variable, scale="free")
meltData <- melt(wine[2:13])
library(ggplot2)
library(GGally)
library(RColorBrewer)
library(reshape)
library(gridExtra)
meltData <- melt(wine[2:13])
ggplot(meltData, aes(factor(variable), value))+
geom_boxplot() + facet_wrap(~variable, scale="free")
meltData <- melt(wine[2:13])
ggplot(data = meltData, aes(factor(variable), value))+
geom_boxplot() + facet_wrap(~variable, scale="free")
library(reshape)
install.packages("reshape")
install.packages("GGally")
install.packages("RColorBrewer")
library(ggplot2)
library(GGally)
library(RColorBrewer)
library(reshape)
library(gridExtra)
install.packages(c("Matrix", "mgcv", "rmarkdown", "stringi"))
meltData <- melt(wine[2:13])
ggplot(data = meltData, aes(factor(variable), value))+
geom_boxplot() + facet_wrap(~variable, scale="free")
# Load the Data
wine <- read.csv('wineQualityWhites.csv')
names(wine)
str(wine)
summary(wine[2:13])
meltData <- melt(wine[2:13])
ggplot(meltData, aes(factor(variable), value))+
geom_boxplot() + facet_wrap(~variable, scale="free")
ggplot(meltData, aes(x = value)) +
facet_wrap(~variable,scales = "free_x") +
geom_histogram()
ggplot(meltData, aes(factor(variable), value))+
geom_boxplot() + facet_wrap(~variable, scale="free_y")
ggplot(meltData, aes(x = value)) +
facet_wrap(~variable, scales = "free") +
geom_histogram()
ggplot(wine[2:13], aes(x = value)) +
facet_wrap(~variable, scales = "free") +
geom_histogram()
ggplot(data = wine[2:13], aes(x = value)) +
facet_wrap(~variable, scales = "free") +
geom_histogram()
ggplot(wine[2:13], aes(x = value)) +
facet_wrap(~variable, scales = "free") +
geom_histogram()
meltData
ggplot(meltData, aes(x = value)) +
facet_wrap(~variable, scales = "free") +
geom_histogram()
ggplot(meltData, aes(factor(variable), value))+
geom_boxplot() + facet_wrap(~variable, scale="free_x")
ggplot(meltData, aes(factor(variable), value))+
geom_boxplot() + facet_wrap(~variable, scale="free_y")
ggplot(meltData, aes(factor(variable), value))+
geom_boxplot() + facet_wrap(~variable, scale="free")
ggplot(wine, aes(x = sulphates, y = alcohol,
colour=factor(wine$quality))) +
geom_density2d(bins=2) +
scale_color_brewer() +
geom_point(color="black", alpha=0.1)
ggplot(wine, aes(x=volatile.acidity, y=sulphates, size = alcohol,
color=factor(quality))) +
geom_point() +
scale_color_brewer()
by red wine quality ratings",
by red wine quality ratings",
and volatile.acidity on red wine quality",
and volatile.acidity on red wine quality") +
and volatile.acidity on red wine quality") +
ggplot(wine, aes(x=volatile.acidity, y=sulphates, size = alcohol,
fill=factor(quality))) +
geom_point(shape=21) +
scale_fill_manual(values=colours) +
theme(plot.title = element_text(size = 14))
ggplot(wine, aes(x=volatile.acidity, y=sulphates, size = alcohol,
fill=factor(quality))) +
geom_point(shape=21) +
scale_fill_manual(values=colours) +
theme(plot.title = element_text(size = 14))
